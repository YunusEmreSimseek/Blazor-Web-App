@using Microsoft.Extensions.Localization
@inject IStringLocalizer<BlazorApp1.Resources.SharedResource> L
@inject UserSessionManager UserSessionManager
@rendermode InteractiveServer
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorApp1</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> @L["search"]
            </NavLink>
        </div>
        @if (!UserSessionManager.IsAuthenticated)
        {
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/login" Match="NavLinkMatch.All">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> @L["login"]
            </NavLink>
        </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/register" Match="NavLinkMatch.All">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> @L["register"]
                </NavLink>
            </div>
        }
        else
        {
            if(UserSessionManager.Role == Role.Admin){
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/admin-panel" Match="NavLinkMatch.All">
                        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> @L["users"]
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/products" Match="NavLinkMatch.All">
                        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> @L["products"]
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

@code {
    protected override void OnInitialized()
    {
        UserSessionManager.OnUserChanged += async () =>
        {
            await InvokeAsync(StateHasChanged);
        };
    }

    public void Dispose()
    {
        UserSessionManager.OnUserChanged -= async () =>
        {
            await InvokeAsync(StateHasChanged);
        };
    }
}

